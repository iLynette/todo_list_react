{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js","components/TodoItem.module.css"],"names":["TodoItem","state","editing","handleEditing","_this","setState","handleUpdatedDone","event","key","console","log","_this2","this","viewMode","editMode","display","_this$props$todo","props","todo","completed","id","title","react_default","a","createElement","className","styles","item","onDoubleClick","style","type","checkbox","checked","onChange","handleChangeProps","onClick","deleteTodoProps","fontStyle","color","opacity","textDecoration","textInput","value","e","setUpdate","target","onKeyDown","React","Component","TodosList","todos","map","components_TodoItem","Header","padding","lineHeight","fontSize","fontWeight","marginBottom","textTransform","textAlign","InputTodo","Object","defineProperty","name","handleSubmit","preventDefault","trim","addTodoProps","alert","onSubmit","placeholder","TodoContainer","handleChange","prevState","objectSpread","addTodoItem","newTodo","uuidv4","concat","toConsumableArray","delTodo","filter","updatedTitle","temp","localStorage","getItem","loadedTodos","JSON","parse","prevProps","stringify","setItem","components_Header","components_InputTodo","components_TodosList","ReactDOM","render","StrictMode","components_TodoContainer","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.729b0287.chunk.js","sourcesContent":["import React from \"react\";\nimport styles from \"./TodoItem.module.css\";\n\nclass TodoItem extends React.Component {\n    state = {\n      editing: false,\n    }\n\n    handleEditing = () => {\n       this.setState({\n         editing: true,\n      })\n    }\n\n    handleUpdatedDone = event => {\n      if (event.key === \"Enter\") {\n        this.setState({ editing: false })\n      }\n    }\n    \n    componentWillUnmount() {\n      console.log(\"Cleaning up...\")\n    }\n  \n    render() {\n      const completedStyle = {\n        fontStyle: \"italic\",\n        color: \"#595959\",\n        opacity: 0.4,\n        textDecoration: \"line-through\",\n      }\n\n      let viewMode = {}\n      let editMode = {}\n\n      if (this.state.editing) {\n        viewMode.display = \"none\"\n      } else {\n        editMode.display = \"none\"\n      }\n        const { completed, id, title } = this.props.todo\n        return (\n          <li className={styles.item}>\n            <div onDoubleClick={this.handleEditing} style={viewMode}>\n              <input\n                type=\"checkbox\"\n                className={styles.checkbox}\n                checked={completed}\n                onChange={() => this.props.handleChangeProps(id)}\n              />\n              <button onClick={() => this.props.deleteTodoProps(id)}>\n                Delete\n              </button>\n              <span style={completed ? completedStyle : null}>\n                {title}\n              </span>\n            </div>\n            <input\n             type=\"text\"\n             style={editMode}\n             className={styles.textInput}\n             value={title}\n             onChange={e => {\n               this.props.setUpdate(e.target.value, id)\n             }}\n             onKeyDown={this.handleUpdatedDone}\n            />\n          </li>\n        )\n    }\n}\n\nexport default TodoItem;","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nclass TodosList extends React.Component {\n    render() {\n        return (\n            <ul>\n                {this.props.todos.map(todo => (\n                    <TodoItem\n                    key={todo.id}\n                    todo={todo}\n                    handleChangeProps={this.props.handleChangeProps}\n                    deleteTodoProps={this.props.deleteTodoProps}\n                    setUpdate={this.props.setUpdate}\n                  />\n                ))}\n            </ul>\n        )\n    }\n}\n\nexport default TodosList;","import React from \"react\";\n\nconst Header = () => {\n    const headerStyle = {\n        padding: \"20px 0\",\n        lineHeight: \"1.5em\",\n      }\n    return (\n        <header style={headerStyle}>\n          <h1\n            style={{\n              fontSize: \"6rem\",\n              fontWeight: \"600\",\n              marginBottom: \"2rem\",\n              lineHeight: \"1em\",\n              color: \"#ececec\",\n              textTransform: \"lowercase\",\n              textAlign: \"center\",\n            }}\n          >\n            todos\n          </h1>\n        </header>\n    )      \n}\n\nexport default Header;","import React, { Component } from \"react\"\n\nclass InputTodo extends Component {\n  state = {\n    title: \"\",\n  }\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    if (this.state.title.trim()) {\n      this.props.addTodoProps(this.state.title)\n      this.setState({\n        title: \"\",\n      })\n    } else {\n      alert(\"Please write item\")\n    }\n  }  \n\n  render() {\n    return (\n        <form onSubmit={this.handleSubmit} className=\"form-container\" >\n        <input\n          type=\"text\"\n          className=\"input-text\"\n          placeholder=\"Add todo...\"\n          value={this.state.title}\n          name=\"title\"\n          onChange={this.onChange}\n        />\n        <button className=\"input-submit\" >Submit</button>\n      </form>\n    )\n  }\n}\nexport default InputTodo","import React from \"react\";\nimport TodosList from \"./TodosList\";\nimport Header from \"./Header\";\nimport InputTodo from \"./InputTodo\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n\nclass TodoContainer extends React.Component {\n    state = {\n        todos: []\n       };\n\n       handleChange = id => {\n        this.setState(prevState => ({\n          todos: prevState.todos.map(todo => {\n            if (todo.id === id) {\n              return {\n                ...todo,\n                completed: !todo.completed,\n              }\n            }\n            return todo\n          }),\n        }))\n      };\n\n      addTodoItem = title => {\n        const newTodo = {\n          id: uuidv4(),\n          title: title,\n          completed: false\n        };\n        this.setState({\n          todos: [...this.state.todos, newTodo]\n        });\n      };\n      \n\n      delTodo = id => {\n        this.setState({\n          todos: [\n            ...this.state.todos.filter(todo => {\n              return todo.id !== id;\n            })\n          ]\n        });\n      };\n\n      setUpdate = (updatedTitle, id) => {\n        this.setState({\n          todos: this.state.todos.map(todo => {\n            if (todo.id === id) {\n              todo.title = updatedTitle\n            }\n            return todo\n          }),\n        })\n      }\n      \n      // componentDidMount() {\n      //   fetch(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\n      //     .then(response => response.json())\n      //     .then(data => this.setState({ todos: data }));\n      // }\n\n      componentDidMount() {\n        const temp = localStorage.getItem(\"todos\")\n        const loadedTodos = JSON.parse(temp)\n        if (loadedTodos) {\n          this.setState({\n            todos: loadedTodos\n          })\n        }\n      }\n      \n      componentDidUpdate(prevProps, prevState) {\n        if(prevState.todos !== this.state.todos) {\n          const temp = JSON.stringify(this.state.todos)\n          localStorage.setItem(\"todos\", temp)\n        }\n      }\n      \n      render() {\n        return (\n          <div className=\"container\">\n            <div className=\"inner\">\n              <Header />\n              <InputTodo addTodoProps={this.addTodoItem} />\n              <TodosList\n                todos={this.state.todos}\n                handleChangeProps={this.handleChange}\n                deleteTodoProps={this.delTodo}\n                setUpdate={this.setUpdate}\n              />\n            </div>\n          </div>\n        );\n      }\n      \n}\nexport default TodoContainer","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TodoContainer from \"./components/TodoContainer\";\nimport \"./App.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoContainer />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__3kzhu\",\"checkbox\":\"TodoItem_checkbox__Q7_O2\",\"textInput\":\"TodoItem_textInput__3zkv5\"};"],"sourceRoot":""}